# Generated by roxygen2: do not edit by hand

S3method("[",harmony_corpus)
S3method("[<-",harmony_corpus)
S3method(as.data.frame,pc_spectrum)
S3method(as.harmony_composition,harmony_composition)
S3method(as.harmony_composition,list)
S3method(as.harmony_composition,numeric)
S3method(as.harmony_corpus,harmony_corpus)
S3method(as.harmony_corpus,list)
S3method(as.list,harmony_corpus)
S3method(as.pc_chord,numeric)
S3method(as.pc_chord,pc_chord)
S3method(as.pc_set,numeric)
S3method(as.pc_set,pc_chord)
S3method(as.pc_set,pc_set)
S3method(as.pc_spectrum,pc_set)
S3method(c,harmony_corpus)
S3method(description,harmony_corpus)
S3method(get_bass_pc,pc_chord)
S3method(get_chord_counts,harmony_corpus)
S3method(get_non_bass_pc_set,pc_chord)
S3method(get_pc_set,pc_chord)
S3method(get_pc_set_norm_form,numeric)
S3method(get_pc_set_norm_form,pc_set)
S3method(get_pc_set_norm_form,pc_set_norm_order)
S3method(get_transposition,pc_set_norm_form)
S3method(get_transpositions,pc_chord)
S3method(new_harmony_composition,list)
S3method(new_harmony_composition,numeric)
S3method(new_harmony_corpus,list)
S3method(normalise_bass,harmony_composition)
S3method(normalise_bass,harmony_corpus)
S3method(normalise_bass,pc_chord)
S3method(num_compositions,harmony_corpus)
S3method(num_events,harmony_composition)
S3method(num_events,harmony_corpus)
S3method(plot,pc_spectrum)
S3method(print,harmony_composition)
S3method(print,harmony_corpus)
S3method(print,pc_chord)
S3method(print,pc_set)
S3method(print,pc_set_norm_form)
S3method(print,pc_set_norm_order)
S3method(print,pc_spectrum)
S3method(transpose,pc_chord)
S3method(transpose,pc_set)
export("description<-")
export(add_attributes)
export(as.harmony_composition)
export(as.harmony_corpus)
export(as.pc_chord)
export(as.pc_set)
export(as.pc_spectrum)
export(clear_cache)
export(convert_amplitude_to_dB)
export(convert_dB_to_amplitude)
export(convert_freq_to_midi)
export(convert_midi_to_freq)
export(convert_pitch_to_pc)
export(convert_pitch_to_pc_set)
export(convert_sparse_spectrum_to_waveform)
export(decode_pc_chord)
export(decode_pc_chords)
export(decode_pc_set)
export(decode_pc_sets)
export(description)
export(encode_pc_chord)
export(encode_pc_chords)
export(encode_pc_set)
export(encode_pc_sets)
export(expand_harmonics)
export(get_ascending_pc_dist)
export(get_bass_pc)
export(get_chord_counts)
export(get_cosine_similarity)
export(get_harmonic_template)
export(get_midi_params)
export(get_non_bass_pc_set)
export(get_pc_chord_alphabet_from_corpus)
export(get_pc_chord_alphabet_size)
export(get_pc_dist)
export(get_pc_set)
export(get_pc_set_alphabet_from_corpus)
export(get_pc_set_norm_form)
export(get_transposition)
export(get_transpositions)
export(is.pc_chord)
export(map_pc_chord_id_to_pc_set_id)
export(new_harmony_composition)
export(new_harmony_corpus)
export(normalise_bass)
export(normalise_pc_set_transition)
export(num_compositions)
export(num_events)
export(pc_chord)
export(pc_set)
export(pc_spectrum)
export(play_sparse_spectrum)
export(plot_sparse_spectrum)
export(plot_spectrum)
export(plot_waveform)
export(rename_columns)
export(rep_to_match)
export(save_wav)
export(sum_amplitudes)
export(transpose)
importFrom(cacheR,clear_cache)
importFrom(magrittr,"%>%")
